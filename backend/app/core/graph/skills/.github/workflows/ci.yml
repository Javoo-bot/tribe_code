name: CI Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    env:
      # Variables de entorno obtenidas de los Secrets de GitHub
      OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }} 
      OPENAI_API_VERSION: ${{ secrets.OPENAI_API_VERSION }}
      DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Asegúrate de que coincida con la versión de tu Dockerfile

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pydantic==1.10.7
        pip install langchain==0.0.208
        pip install openai==0.27.4
        pip install requests python-dotenv

    - name: Run Unit Tests
      run: |
        # Asegúrate de tener pruebas definidas, por ejemplo con pytest
        # Aquí asumo que usas pytest; si no, ajusta este paso
        pip install pytest
        pytest

    - name: Build Docker Image
      run: |
        docker build -t mi_imagen:latest .

    - name: Run Docker Container
      run: |
        docker run --env-file .env mi_imagen:latest

    - name: (Opcional) Push Docker Image to Docker Hub
      if: github.ref == 'refs/heads/main'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
        docker tag mi_imagen:latest your_dockerhub_username/mi_imagen:latest
        docker push your_dockerhub_username/mi_imagen:latest
